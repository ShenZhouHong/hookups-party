body {
    background-color: #0f161d;
}

canvas {
    display: block;
    position: fixed;
    z-index: 0;
    pointer-events: none;
}

/*
    Styling for inline logo:
    <span class="logo-inline">HookupsðŸ’‹</span>
*/
.logo-kiss-emoji {
    display: inline-block;
    vertical-align: middle;
    height: 2em;
}

.logo-inline {
    font-family: 'StratoLinked';
    font-weight: normal;
    font-style: normal;
    color: #db0000;
}

/*  Slide class is used to standardize slide appearance, and set max viewport */
.container-fluid .slide {
    height: 100vh;
    padding-top: 5em;
    padding-left: 2em;
    padding-right: 2em;
}

/*
    The .envelope class is used to create the style and background for the cards
    that display text and prompts to the user. It's common attributes are first
    defined here, then it's height is dynamically given through media queries.
*/
/*  Begin with defining common styles */
.envelope {
    background-color: #FFF;
    border:2px dashed #db0000;
    border-width:2px;
    border-style:dashed;
    border-color:#db0000;
    padding-bottom: 0.5em;
}

/* Logo link styling */
#logo-containe a:link {
    text-decoration: none;
}

#logo-containe a:visited {
    text-decoration: none;
}

#logo-containe a:hover {
    text-decoration: none;
}

#logo-containe a:active {
    text-decoration: none;
}

/*
    Error styling

    For the generic error box that comes up when anything bad happens. Also used
    to style <noscript> messages when client has javascript disabled.
*/

.error-box {
    position: fixed;
    top: 10%;
    left: 50%;
    -ms-transform: translateX(-50%) rotate(-2deg);
        transform: translateX(-50%) rotate(-2deg);
    padding: 2em;
    z-index: 1000;
}

.error-box h2 {
    margin-top: 0;
}

.failedcss {
    display: none;
}

/*
    Mobile collapsing class
    The mobile collapsing class is a custom utility class that is designed to
    hide any div assigned to it below a certain screen size
*/
.collapse-non-sm {
    height: 0;
    display: none;
}
.collapse-non-sm.collapsing {
    display: block;
}

@media (min-width: 568px) {
    .collapse-non-sm {
        height: auto;
        display: block;
    }
}

/*
    CSS3 Animations
    Courtesy of CSS Cheatsheet:
    http://www.justinaguilar.com/animations/
*/
.tossing{
	animation-name: tossing;
	-webkit-animation-name: tossing;

	animation-duration: 2.5s;
	-webkit-animation-duration: 2.5s;

	animation-iteration-count: infinite;
	-webkit-animation-iteration-count: infinite;
}

@keyframes tossing {
	0% {
		transform: rotate(-0.4deg);
	}
	50% {
		transform: rotate(0.4deg);
	}
	100% {
		transform: rotate(-0.4deg);
	}
}

.pulse{
	animation-name: pulse;
	-webkit-animation-name: pulse;

	animation-duration: 1s;
	-webkit-animation-duration: 1s;

	animation-iteration-count: infinite;
	-webkit-animation-iteration-count: infinite;
}

@keyframes pulse {
	0% {
		transform: scale(0.9);
		opacity: 0.7;
	}
	50% {
		transform: scale(1.0);
		opacity: 1;
	}
	100% {
		transform: scale(0.9);
		opacity: 0.7;
	}
}

.floating{
	animation-name: floating;
	-webkit-animation-name: floating;

	animation-duration: 1.5s;
	-webkit-animation-duration: 1.5s;

	animation-iteration-count: infinite;
	-webkit-animation-iteration-count: infinite;
}

@keyframes floating {
	0% {
		transform: translateY(0%);
	}
	50% {
		transform: translateY(8%);
	}
	100% {
		transform: translateY(0%);
	}
}
